namespace Sarcophagus
{
	delegate void PageChangedDelegate(PageId pageId);

	enum PullDataResult { Success, DecryptionFailure };
	enum PushDataResult { Success, EncryptionFailure };

	runtimeclass FileSerializer : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		FileSerializer();
		static FileSerializer GetInstance();

		UInt64 GetStorageKeySize();
		UInt64 GetStorageKeyBuff();
		void SetStorageKey(UInt64 size, UInt64 buff);
		void MakeDirty();
		void ClearDirty();

		void Initialize();
		void OpenFile(Windows.Storage.StorageFile file);
		void SaveFile(Windows.Storage.StorageFile file);
		Windows.Foundation.IAsyncAction OpenFileAsync(Windows.Storage.StorageFile file);
		Windows.Foundation.IAsyncAction SaveFileAsync(Windows.Storage.StorageFile file);

		Windows.Foundation.IAsyncOperation<Boolean> AuthAsync(UInt64 keySize, UInt64 keyBuff);

		Boolean IsDirty{ get; };
		Microsoft.UI.Xaml.Visibility IsDirtyVisibility;
		Windows.Storage.StorageFile FileToSave;
	}

	runtimeclass DecisionBox
	{
		DecisionBox();
		DecisionBox(String text);

		Windows.Foundation.IAsyncAction ShowAsync();

		String Text{ get; set; };
		String Button1Text{ get; set; };
		String Button2Text{ get; set; };
		String ButtonCloseText{ get; set; };
		Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ContentDialog, Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> Button1Handler{ get; set; };
		Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ContentDialog, Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> Button2Handler{ get; set; };
		Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ContentDialog, Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> ButtonCloseHandler{ get; set; };
	}

	enum PasswordDecisionStatus
	{
		Ok, 
		Cancel
	};

	struct PasswordDecisionResult
	{
		PasswordDecisionStatus Status;
		String Password;
	};

	runtimeclass PasswordDecisionBox
	{
		PasswordDecisionBox();
		PasswordDecisionBox(String text, String placeholderText);

		Windows.Foundation.IAsyncOperation<PasswordDecisionResult> ShowAsync();

		String Text{ get; set; };
		String PlaceholderText{ get; set; };
		Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ContentDialog, Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> ButtonOkHandler{ get; set; };
		Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.ContentDialog, Microsoft.UI.Xaml.Controls.ContentDialogButtonClickEventArgs> ButtonCancelHandler{ get; set; };
	}



	// 
	// Commands
	// 

	[default_interface]
	runtimeclass AddCredFolderCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		AddCredFolderCommand();
	}
	
	[default_interface]
	runtimeclass RemoveCredFolderCommand: Microsoft.UI.Xaml.Input.ICommand
	{
		RemoveCredFolderCommand();
	}

	[default_interface]
	runtimeclass EditCredFolderCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		EditCredFolderCommand();
	}

	[default_interface]
	runtimeclass AddCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		AddCredentialCommand();
	}
	
	[default_interface]
	runtimeclass RemoveCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		RemoveCredentialCommand();
	}

	[default_interface]
	runtimeclass EditCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		EditCredentialCommand();
	}
	
	[default_interface]
	runtimeclass CopyCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		CopyCredentialCommand();
	}

	[default_interface]
	runtimeclass ChooseCryptoengineToCreateFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		ChooseCryptoengineToCreateFileCommand();
	}

	[default_interface]
	runtimeclass ChooseCryptoengineToSaveFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		ChooseCryptoengineToSaveFileCommand();
	}

	[default_interface]
	runtimeclass ChooseCryptoengineToSaveFileAsCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		ChooseCryptoengineToSaveFileAsCommand();
	}

	[default_interface]
	runtimeclass NewFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		NewFileCommand();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass OpenFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		OpenFileCommand();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass SaveFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		SaveFileCommand();
		Windows.Foundation.IAsyncAction ExecuteAsync();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass SaveFileAsCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		SaveFileAsCommand();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass ChooseRecentFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		ChooseRecentFileCommand();
	}

	[default_interface]
	runtimeclass ChooseCryptoengineCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		ChooseCryptoengineCommand();
	}


				
	// 
	// View-Models
	// 

	runtimeclass CredFolder : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		CredFolder();
		CredFolder(String name);

		MainVM MainVM{ get; };
		Windows.Foundation.Collections.IObservableVector<Credential> Credentials{ get; };

		String Name;
	}

	runtimeclass Credential : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		Credential();
		Credential(CredFolder credFolder, String name, String login, String password);

		MainVM MainVM{ get; };
		CredFolder CredFolder{ get; };

		String Name;
		String Login;
		String Password;
	}

	enum PageId
	{
		Main,
		RecentFiles,
		ChooseCryptoengine,
		EditCredFolder,
		EditCredential,
	};

	runtimeclass MainVM : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		MainVM();

		PageId PageId{ get; set; };

		CredFolder SelectedCredFolder{ get; set; };
		Windows.Foundation.Collections.IObservableVector<CredFolder> CredFolders{ get; };

		Credential CredentialTemplate{ get; set; };

		AddCredFolderCommand AddCredFolderCommand{ get; };
		RemoveCredFolderCommand RemoveCredFolderCommand{ get; };
		EditCredFolderCommand EditCredFolderCommand{ get; };
		AddCredentialCommand AddCredentialCommand{ get; };
		RemoveCredentialCommand RemoveCredentialCommand{ get; };
		EditCredentialCommand EditCredentialCommand{ get; };
		CopyCredentialCommand CopyCredentialCommand{ get; };
		ChooseCryptoengineToCreateFileCommand ChooseCryptoengineToCreateFileCommand{ get; };
		NewFileCommand NewFileCommand{ get; };
		OpenFileCommand OpenFileCommand{ get; };
		ChooseCryptoengineToSaveFileCommand ChooseCryptoengineToSaveFileCommand{ get; };
		SaveFileCommand SaveFileCommand{ get; };
		ChooseCryptoengineToSaveFileAsCommand ChooseCryptoengineToSaveFileAsCommand{ get; };
		SaveFileAsCommand SaveFileAsCommand{ get; };

		event PageChangedDelegate PageChanged;
	}

	runtimeclass RecentFileVM : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		RecentFileVM(String name, Windows.Storage.StorageFile file);

		RecentFilesVM RecentFilesVM{ get; };
		String Name{ get; };
		Windows.Storage.StorageFile File{ get; };
	}

	runtimeclass RecentFilesVM
	{
		RecentFilesVM();
		void PushRecentFile(Windows.Storage.StorageFile file);
		void WriteIni();

		Windows.Foundation.Collections.IObservableVector<RecentFileVM> RecentFiles{ get; };
		ChooseRecentFileCommand ChooseRecentFileCommand{ get; };
	}

	runtimeclass CryptoengineVM : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		CryptoengineVM();
		CryptoengineVM(String name, UInt64 uuidPart1, UInt64 uuidPart2);

		ChooseCryptoengineVM ChooseCryptoengineVM{ get; };

		String Name;
		UInt64 UuidPart1{ get; };
		UInt64 UuidPart2{ get; };
	}

	enum ChooseCryptoengineTarget
	{
		NewFile, 
		SaveFile,
		SaveFileAs
	};

	runtimeclass ChooseCryptoengineVM
	{
		ChooseCryptoengineVM();
		void Rescan();

		ChooseCryptoengineTarget Target{ get; set; };
		Windows.Foundation.Collections.IObservableVector<CryptoengineVM> Cryptoengines{ get; };
		ChooseCryptoengineCommand ChooseCryptoengineCommand{ get; };
	}





	// 
	// Views
	// 

	[default_interface]
	runtimeclass MainWindow : Microsoft.UI.Xaml.Window
	{
		MainWindow();
		MainVM MainVM{ get; };
		FileSerializer FileSerializer{ get; };
	}

	[default_interface]
	runtimeclass RecentFilesPage : Microsoft.UI.Xaml.Controls.Page
	{
		RecentFilesPage();
		RecentFilesVM RecentFilesVM{ get; };
	}
	
	[default_interface]
	runtimeclass MainPage : Microsoft.UI.Xaml.Controls.Page
	{
		MainPage();
		MainVM MainVM{ get; };
	}

    [default_interface]
    runtimeclass CredFolderEditor : Microsoft.UI.Xaml.Controls.Page
    {
        CredFolderEditor();
		MainVM MainVM{ get; };
	}
	
	runtimeclass CredEditor : Microsoft.UI.Xaml.Controls.Page
	{
		CredEditor();
		MainVM MainVM{ get; };
	}

	runtimeclass ChooseCryptoenginePage : Microsoft.UI.Xaml.Controls.Page
	{
		ChooseCryptoenginePage();
		ChooseCryptoengineVM ChooseCryptoengineVM{ get; };
	}
}

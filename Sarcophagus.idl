namespace Sarcophagus
{
	delegate void PageChangedDelegate(PageId pageId);

	// 
	// View-Models
	// 

	enum PageId
	{
		Main,
		EditCredential
	};

	enum PullDataResult { Success, DecryptionFailure };
	enum PushDataResult { Success, EncryptionFailure };

	[default_interface]
	runtimeclass AddCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		AddCredentialCommand();
	}
	
	[default_interface]
	runtimeclass RemoveCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		RemoveCredentialCommand();
	}

	[default_interface]
	runtimeclass EditCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		EditCredentialCommand();
	}
	
	[default_interface]
	runtimeclass CopyCredentialCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		CopyCredentialCommand();
	}

	[default_interface]
	runtimeclass NewFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		NewFileCommand();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass OpenFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		OpenFileCommand();
		Int64 WindowHandle{ get; set; };
	}

	[default_interface]
	runtimeclass SaveFileCommand : Microsoft.UI.Xaml.Input.ICommand
	{
		SaveFileCommand();
		Int64 WindowHandle{ get; set; };
	}

	runtimeclass Credential : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		Credential();
		Credential(String name, String password);

		MainVM MainVM{ get; };

		String Name;
		String Password;
	}

	runtimeclass MainVM
	{
		MainVM();
		static MainVM GetInstance();

		PageId PageId{ get; set; };
		Credential CredentialTemplate{ get; set; };
		Windows.Foundation.Collections.IObservableVector<Credential> Credentials{ get; };

		AddCredentialCommand AddCredentialCommand{ get; };
		RemoveCredentialCommand RemoveCredentialCommand{ get; };
		EditCredentialCommand EditCredentialCommand{ get; };
		CopyCredentialCommand CopyCredentialCommand{ get; };
		NewFileCommand NewFileCommand{ get; };
		OpenFileCommand OpenFileCommand{ get; };
		SaveFileCommand SaveFileCommand{ get; };

		event PageChangedDelegate PageChanged;
	}

	runtimeclass FileSerializer : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
		FileSerializer();
		static FileSerializer GetInstance();

		UInt64 GetStorageKeySize();
		UInt64 GetStorageKeyBuff();
		void SetStorageKey(UInt64 size, UInt64 buff);
		void MakeDirty();
		void ClearDirty();

		void Initialize();
		void OpenFile(Windows.Storage.StorageFile file);
		void SaveFile(Windows.Storage.StorageFile file);
		Windows.Foundation.IAsyncAction OpenFileAsync(Windows.Storage.StorageFile file);
		Windows.Foundation.IAsyncAction SaveFileAsync(Windows.Storage.StorageFile file);

		Windows.Foundation.IAsyncOperation<Boolean> AuthAsync(UInt64 keySize, UInt64 keyBuff);

		Boolean IsDirty{ get; };
		Microsoft.UI.Xaml.Visibility IsDirtyVisibility;
	}



	// 
	// Views
	// 

	[default_interface]
	runtimeclass MainWindow : Microsoft.UI.Xaml.Window
	{
		MainWindow();
		MainVM MainVM{ get; };
		FileSerializer FileSerializer{ get; };
	}

	[default_interface]
	runtimeclass MainPage : Microsoft.UI.Xaml.Controls.Page
	{
		MainPage();
		MainVM MainVM{ get; };
	}

	runtimeclass CredEditor : Microsoft.UI.Xaml.Controls.Page
	{
		CredEditor();
		MainVM MainVM{ get; };
	}
}

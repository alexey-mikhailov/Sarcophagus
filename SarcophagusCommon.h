#pragma once

#define nameof(x) (#x)
#define wnameof(x) (L#x)

using namespace winrt::Windows::Foundation;
using namespace winrt::Microsoft::UI::Xaml;
using namespace winrt::Microsoft::UI::Xaml::Controls;

namespace Sarcophagus
{
	constexpr wchar_t* EmptyString = L"";
	static TypedEventHandler<ContentDialog, ContentDialogButtonClickEventArgs> EmptyTypedEventHandler = [](ContentDialog, ContentDialogButtonClickEventArgs) {};

	HWND GetWindowHandle(winrt::Microsoft::UI::Xaml::Window window);
	void Assert(bool expression, int32_t reason, const wchar_t* reasonStr, const wchar_t* message, const char* file, int line);
	void Fail(int32_t reason, const wchar_t* reasonStr, const wchar_t* message, const char* file, int line);

	constexpr uint8_t CipherTable[0x100] =
	{
		0x31, 0x3f, 0x14, 0x82, 0x46, 0x0a, 0xbd, 0xdc, 0x29, 0x77, 0x76, 0x6f, 0xaf, 0xe9, 0xcd, 0x9e,
		0x1f, 0x25, 0xf6, 0xf6, 0xb8, 0x5c, 0x70, 0x60, 0xe4, 0xf9, 0x61, 0xe7, 0x25, 0xc4, 0x4f, 0x71,
		0x82, 0x5b, 0x6c, 0x6a, 0x99, 0xdf, 0x56, 0xb1, 0x85, 0xe7, 0x2f, 0x61, 0xe7, 0x6b, 0xdb, 0x26,
		0x53, 0x50, 0x0e, 0xc3, 0x8f, 0xa2, 0x70, 0xe5, 0xa0, 0x47, 0x7b, 0x82, 0xe9, 0x40, 0x64, 0xa4,
		0x03, 0x4e, 0xc2, 0x88, 0xde, 0xd0, 0x38, 0x56, 0xd3, 0xb8, 0x32, 0x0d, 0x67, 0x0e, 0x9e, 0x34,
		0xbd, 0x0b, 0xac, 0x7f, 0x9d, 0xf0, 0x7f, 0xc0, 0xf5, 0xc7, 0xf7, 0x3d, 0x51, 0xa8, 0x38, 0x34,
		0xa0, 0x26, 0x08, 0xa3, 0x67, 0xe4, 0x27, 0x8f, 0xe7, 0xdd, 0x05, 0xf2, 0xd4, 0x47, 0x2f, 0x1c,
		0x01, 0x34, 0x0a, 0x33, 0x4e, 0xfd, 0x01, 0x06, 0x7e, 0xd9, 0xc7, 0x4c, 0xf2, 0xec, 0x19, 0xef,
		0xd3, 0xfa, 0xcb, 0xf3, 0x81, 0x76, 0x29, 0x88, 0x97, 0x95, 0xa8, 0xd2, 0x1b, 0x2d, 0x99, 0x4a,
		0xf5, 0xdb, 0xc7, 0x2e, 0x9a, 0x50, 0xa2, 0xe8, 0xdc, 0x40, 0x8f, 0xa2, 0xfe, 0x25, 0x41, 0x4a,
		0x34, 0x61, 0x77, 0xdc, 0x3c, 0xa9, 0x27, 0x66, 0xbb, 0xd3, 0x1f, 0x7c, 0xf1, 0xb8, 0x93, 0xae,
		0xdd, 0xad, 0xce, 0x92, 0xde, 0x3b, 0x87, 0xd6, 0xd7, 0x0d, 0xff, 0x84, 0xcc, 0xd3, 0x3c, 0x4e,
		0x1e, 0x8d, 0xcc, 0xcb, 0x55, 0x93, 0xce, 0xa3, 0x50, 0x1e, 0x3c, 0xe6, 0x95, 0x8f, 0x5e, 0x22,
		0xd9, 0x98, 0x9f, 0x49, 0x19, 0xcb, 0x3c, 0x66, 0x95, 0x58, 0xa1, 0xa3, 0x6a, 0x8d, 0xf5, 0x28,
		0xb0, 0x19, 0x18, 0x69, 0x3c, 0x75, 0xb6, 0xce, 0x74, 0xb1, 0x6e, 0x44, 0xfe, 0xbe, 0xa7, 0x83,
		0xb7, 0xd3, 0xe0, 0xab, 0xd9, 0x55, 0xe0, 0x27, 0xb5, 0xb0, 0x2a, 0x6e, 0xaf, 0x4a, 0x44, 0xde
	};
}

#define SARCOPHAGUS_ASSERT(bExpression, i32reason, wstrMessage) ::Sarcophagus::Assert(bExpression, i32reason, L#i32reason, wstrMessage, __FILE__, __LINE__)
#define SARCOPHAGUS_FAIL(i32reason, wstrMessage)                ::Sarcophagus::Fail(i32reason, L#i32reason, wstrMessage, __FILE__, __LINE__)
